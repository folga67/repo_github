{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Копия блокнота \"hw_webinar_2.ipynb\"","provenance":[{"file_id":"1sPovG5KqOz7NamSYD_0EjsbDEgMdZrCe","timestamp":1626288455040}],"collapsed_sections":[]},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.3"}},"cells":[{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yKqdwo7qYzLV","executionInfo":{"status":"ok","timestamp":1626334622955,"user_tz":-180,"elapsed":2953,"user":{"displayName":"Olga Fedorova","photoUrl":"","userId":"03055957930476901401"}},"outputId":"61c6b7cc-3995-439e-fb97-75097600e090"},"source":["!pip install implicit"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Requirement already satisfied: implicit in /usr/local/lib/python3.7/dist-packages (0.4.4)\n","Requirement already satisfied: tqdm>=4.27 in /usr/local/lib/python3.7/dist-packages (from implicit) (4.41.1)\n","Requirement already satisfied: scipy>=0.16 in /usr/local/lib/python3.7/dist-packages (from implicit) (1.4.1)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.7/dist-packages (from implicit) (1.19.5)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"rgIzW-DSC8Yi"},"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import implicit\n","%matplotlib inline\n","\n","# Для работы с матрицами\n","from scipy.sparse import csr_matrix, coo_matrix\n","\n","# Детерминированные алгоритмы\n","from implicit.nearest_neighbours import ItemItemRecommender, CosineRecommender, TFIDFRecommender, BM25Recommender\n","\n","# Метрики\n","from implicit.evaluation import train_test_split\n","from implicit.evaluation import precision_at_k, mean_average_precision_at_k, AUC_at_k, ndcg_at_k"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JFtpBqlhrnGE","executionInfo":{"status":"ok","timestamp":1626334650093,"user_tz":-180,"elapsed":19628,"user":{"displayName":"Olga Fedorova","photoUrl":"","userId":"03055957930476901401"}},"outputId":"27e68f3c-29ec-45b0-dcd2-82c4f8f60c61"},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Mounted at /content/drive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":111},"id":"9qFkcgyrC8Yt","executionInfo":{"status":"ok","timestamp":1626334659239,"user_tz":-180,"elapsed":6058,"user":{"displayName":"Olga Fedorova","photoUrl":"","userId":"03055957930476901401"}},"outputId":"b9fb44dc-30fd-4134-d124-b9e567edaaa1"},"source":["data = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Recomended_sys/retail_train.csv')\n","data.head(2)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user_id</th>\n","      <th>basket_id</th>\n","      <th>day</th>\n","      <th>item_id</th>\n","      <th>quantity</th>\n","      <th>sales_value</th>\n","      <th>store_id</th>\n","      <th>retail_disc</th>\n","      <th>trans_time</th>\n","      <th>week_no</th>\n","      <th>coupon_disc</th>\n","      <th>coupon_match_disc</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2375</td>\n","      <td>26984851472</td>\n","      <td>1</td>\n","      <td>1004906</td>\n","      <td>1</td>\n","      <td>1.39</td>\n","      <td>364</td>\n","      <td>-0.6</td>\n","      <td>1631</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2375</td>\n","      <td>26984851472</td>\n","      <td>1</td>\n","      <td>1033142</td>\n","      <td>1</td>\n","      <td>0.82</td>\n","      <td>364</td>\n","      <td>0.0</td>\n","      <td>1631</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   user_id    basket_id  day  ...  week_no  coupon_disc  coupon_match_disc\n","0     2375  26984851472    1  ...        1          0.0                0.0\n","1     2375  26984851472    1  ...        1          0.0                0.0\n","\n","[2 rows x 12 columns]"]},"metadata":{"tags":[]},"execution_count":5}]},{"cell_type":"code","metadata":{"id":"epcBZlgJC8Y0"},"source":["test_size_weeks = 3\n","\n","data_train = data[data['week_no'] < data['week_no'].max() - test_size_weeks]\n","data_test = data[data['week_no'] >= data['week_no'].max() - test_size_weeks]"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"zlUUzLFeC8Y4"},"source":["### Задание 1. Weighted Random Recommendation\n","\n","Напишите код для случайных рекоммендаций, в которых вероятность рекомендовать товар прямо пропорциональна логарифму продаж\n","- Можно сэмплировать товары случайно, но пропорционально какому-либо весу\n","- Например, прямопропорционально популярности. Вес = log(sales_sum товара)"]},{"cell_type":"code","metadata":{"id":"brMuCHolC8Y4"},"source":["def weighted_random_recommendation(data, n):\n","\n","    popularity = data.groupby('item_id')['sales_value'].sum().reset_index()\n","    popularity['weight'] = popularity['sales_value']/popularity['sales_value'].sum()\n","    item_weights = np.array(popularity['weight'])\n","    items = np.array(popularity['item_id'])\n","    recs = np.random.choice(items, p = item_weights, size=n, replace=False)\n","\n","    return recs.tolist()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3yvfdzG7jpmN","executionInfo":{"status":"ok","timestamp":1626334674240,"user_tz":-180,"elapsed":235,"user":{"displayName":"Olga Fedorova","photoUrl":"","userId":"03055957930476901401"}},"outputId":"0fb1090b-5cd1-4172-cd78-2ebf2738b474"},"source":["recomm = weighted_random_recommendation(data, n=5)\n","recomm"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[5979283, 876869, 1404121, 1134810, 5584645]"]},"metadata":{"tags":[]},"execution_count":8}]},{"cell_type":"markdown","metadata":{"id":"hyNG6O-wC8Y_"},"source":["### Задание 2. Расчет метрик\n","Рассчитайте Precision@5 для каждого алгоритма с помощью функции из вебинара 1. Какой алгоритм показывает лучшее качество?"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":179},"id":"36HtRgm8C8ZA","executionInfo":{"status":"ok","timestamp":1626354680152,"user_tz":-180,"elapsed":242,"user":{"displayName":"Olga Fedorova","photoUrl":"","userId":"03055957930476901401"}},"outputId":"1d65ad0a-ad3a-4ab4-b805-1fe553895409"},"source":["result = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Recomended_sys/predictions_basic.csv')\n","result.head(2)"],"execution_count":95,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user_id</th>\n","      <th>actual</th>\n","      <th>random_recommendation</th>\n","      <th>popular_recommendation</th>\n","      <th>itemitem</th>\n","      <th>cosine</th>\n","      <th>tfidf</th>\n","      <th>own_purchases</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>[  821867   834484   856942   865456   889248 ...</td>\n","      <td>[5586238, 1015228, 866118, 2416733, 2603573]</td>\n","      <td>[6534178, 6533889, 1029743, 6534166, 1082185]</td>\n","      <td>[981760, 1127831, 1098066, 826249, 878996]</td>\n","      <td>[981760, 1127831, 1098066, 878996, 826249]</td>\n","      <td>[981760, 1127831, 1098066, 826249, 878996]</td>\n","      <td>[999999, 1082185, 1029743, 995785, 1004906]</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>3</td>\n","      <td>[  835476   851057   872021   878302   879948 ...</td>\n","      <td>[161354, 63027, 1027802, 12263694, 307395]</td>\n","      <td>[6534178, 6533889, 1029743, 6534166, 1082185]</td>\n","      <td>[981760, 995242, 1029743, 840361, 961554]</td>\n","      <td>[981760, 1004906, 961554, 1096036, 1080414]</td>\n","      <td>[981760, 1004906, 859075, 1096036, 961554]</td>\n","      <td>[999999, 1082185, 1098066, 6534178, 1127831]</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   user_id  ...                                 own_purchases\n","0        1  ...   [999999, 1082185, 1029743, 995785, 1004906]\n","1        3  ...  [999999, 1082185, 1098066, 6534178, 1127831]\n","\n","[2 rows x 8 columns]"]},"metadata":{"tags":[]},"execution_count":95}]},{"cell_type":"code","metadata":{"id":"rYszlbPbQPQ3","executionInfo":{"status":"ok","timestamp":1626354683191,"user_tz":-180,"elapsed":239,"user":{"displayName":"Olga Fedorova","photoUrl":"","userId":"03055957930476901401"}}},"source":["import ast\n"," \n","# код для корректной загрузки датасета\n","result['actual'] = result['actual'].apply(lambda row: np.fromstring(row[1:-1],sep=' ',dtype=int))\n","for column_name in result.columns[2:]:\n","    result[column_name] = result[column_name].apply(ast.literal_eval)"],"execution_count":96,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DwiDBlKMSx_a","executionInfo":{"status":"ok","timestamp":1626354731966,"user_tz":-180,"elapsed":605,"user":{"displayName":"Olga Fedorova","photoUrl":"","userId":"03055957930476901401"}},"outputId":"8ac04c93-62d3-49c5-be78-0cb33b4e3a66"},"source":["%%time\n","\n","recomm = weighted_random_recommendation(data_train, n=5)\n","result['weighted random recommender'] = result['user_id'].apply(lambda x: recomm)"],"execution_count":97,"outputs":[{"output_type":"stream","text":["CPU times: user 203 ms, sys: 0 ns, total: 203 ms\n","Wall time: 335 ms\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":524},"id":"drfXrqFoQbp6","executionInfo":{"status":"ok","timestamp":1626354752064,"user_tz":-180,"elapsed":263,"user":{"displayName":"Olga Fedorova","photoUrl":"","userId":"03055957930476901401"}},"outputId":"aa5cbc21-b73c-44c3-8f90-c52e5f652652"},"source":["result.head()"],"execution_count":99,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user_id</th>\n","      <th>actual</th>\n","      <th>random_recommendation</th>\n","      <th>popular_recommendation</th>\n","      <th>itemitem</th>\n","      <th>cosine</th>\n","      <th>tfidf</th>\n","      <th>own_purchases</th>\n","      <th>weighted random recommender</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>[821867, 834484, 856942, 865456, 889248, 90795...</td>\n","      <td>[5586238, 1015228, 866118, 2416733, 2603573]</td>\n","      <td>[6534178, 6533889, 1029743, 6534166, 1082185]</td>\n","      <td>[981760, 1127831, 1098066, 826249, 878996]</td>\n","      <td>[981760, 1127831, 1098066, 878996, 826249]</td>\n","      <td>[981760, 1127831, 1098066, 826249, 878996]</td>\n","      <td>[999999, 1082185, 1029743, 995785, 1004906]</td>\n","      <td>[879045, 903325, 944938, 6534178, 12946257]</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>3</td>\n","      <td>[835476, 851057, 872021, 878302, 879948, 90963...</td>\n","      <td>[161354, 63027, 1027802, 12263694, 307395]</td>\n","      <td>[6534178, 6533889, 1029743, 6534166, 1082185]</td>\n","      <td>[981760, 995242, 1029743, 840361, 961554]</td>\n","      <td>[981760, 1004906, 961554, 1096036, 1080414]</td>\n","      <td>[981760, 1004906, 859075, 1096036, 961554]</td>\n","      <td>[999999, 1082185, 1098066, 6534178, 1127831]</td>\n","      <td>[879045, 903325, 944938, 6534178, 12946257]</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>6</td>\n","      <td>[920308, 926804, 946489, 1006718, 1017061, 107...</td>\n","      <td>[13416054, 936084, 7410040, 9527114, 377218]</td>\n","      <td>[6534178, 6533889, 1029743, 6534166, 1082185]</td>\n","      <td>[1098066, 826249, 1106523, 923746, 1058997]</td>\n","      <td>[1098066, 826249, 860776, 854852, 1068719]</td>\n","      <td>[1098066, 826249, 860776, 1068719, 916122]</td>\n","      <td>[999999, 1082185, 1029743, 6534178, 1127831]</td>\n","      <td>[879045, 903325, 944938, 6534178, 12946257]</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>7</td>\n","      <td>[840386, 889774, 898068, 909714, 929067, 95347...</td>\n","      <td>[5574336, 990072, 868548, 995880, 842226]</td>\n","      <td>[6534178, 6533889, 1029743, 6534166, 1082185]</td>\n","      <td>[981760, 1098066, 840361, 883404, 916122]</td>\n","      <td>[981760, 1098066, 883404, 1004906, 859075]</td>\n","      <td>[981760, 883404, 1098066, 859075, 916122]</td>\n","      <td>[999999, 1082185, 1029743, 1127831, 995785]</td>\n","      <td>[879045, 903325, 944938, 6534178, 12946257]</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>8</td>\n","      <td>[835098, 872137, 910439, 924610, 992977, 10412...</td>\n","      <td>[1277401, 94446, 3133282, 1925252, 855699]</td>\n","      <td>[6534178, 6533889, 1029743, 6534166, 1082185]</td>\n","      <td>[904360, 13115903, 13189726, 13190294, 15596515]</td>\n","      <td>[904360, 5588666, 1096036, 979707, 1013321]</td>\n","      <td>[904360, 1096036, 5588666, 979707, 1013321]</td>\n","      <td>[999999, 1082185, 1029743, 1098066, 6534178]</td>\n","      <td>[879045, 903325, 944938, 6534178, 12946257]</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   user_id  ...                  weighted random recommender\n","0        1  ...  [879045, 903325, 944938, 6534178, 12946257]\n","1        3  ...  [879045, 903325, 944938, 6534178, 12946257]\n","2        6  ...  [879045, 903325, 944938, 6534178, 12946257]\n","3        7  ...  [879045, 903325, 944938, 6534178, 12946257]\n","4        8  ...  [879045, 903325, 944938, 6534178, 12946257]\n","\n","[5 rows x 9 columns]"]},"metadata":{"tags":[]},"execution_count":99}]},{"cell_type":"code","metadata":{"id":"H9Tcp2vYsh_s","executionInfo":{"status":"ok","timestamp":1626354764017,"user_tz":-180,"elapsed":245,"user":{"displayName":"Olga Fedorova","photoUrl":"","userId":"03055957930476901401"}}},"source":["def precision_at_k(recommended_list, bought_list, k=5):\n","    \n","    bought_list = np.array(bought_list)\n","    recommended_list = np.array(recommended_list)\n","    \n","    bought_list = bought_list  # Тут нет [:k] !!\n","    recommended_list = recommended_list[:k]\n","    \n","    flags = np.isin(bought_list, recommended_list)\n","    \n","    precision = flags.sum() / len(recommended_list)\n","    \n","    \n","    return precision"],"execution_count":100,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ELYNx_MCQ8Ki","executionInfo":{"status":"ok","timestamp":1626354768589,"user_tz":-180,"elapsed":1195,"user":{"displayName":"Olga Fedorova","photoUrl":"","userId":"03055957930476901401"}},"outputId":"424ada02-30c6-4173-8c1d-860535490576"},"source":["for column_name in result.columns[1:]:\n","    print('%s: %f' % (column_name, result.apply(lambda row: precision_at_k(row[column_name], row['actual']), axis=1).mean()))"],"execution_count":101,"outputs":[{"output_type":"stream","text":["actual: 1.000000\n","random_recommendation: 0.000588\n","popular_recommendation: 0.155240\n","itemitem: 0.033595\n","cosine: 0.035260\n","tfidf: 0.036141\n","own_purchases: 0.179987\n","weighted random recommender: 0.055142\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"igDU0j1cC8ZH"},"source":["### Задание 3*. Улучшение бейзлайнов и ItemItem\n","\n","- Попробуйте улучшить бейзлайны, считая их на топ-5000 товаров\n","- Попробуйте улучшить разные варианты ItemItemRecommender, выбирая число соседей $K$."]},{"cell_type":"code","metadata":{"id":"zYBR3cMPC8ZH"},"source":["# your_code"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"CLqYffbSzt2m"},"source":["Random recommendation\n","Попробовала улучшить бейзлайн, сяитая его на 5000 товаров и взвешивая их по популярности."]},{"cell_type":"code","metadata":{"id":"yBF7mKeKztDk","executionInfo":{"status":"ok","timestamp":1626355359782,"user_tz":-180,"elapsed":250,"user":{"displayName":"Olga Fedorova","photoUrl":"","userId":"03055957930476901401"}}},"source":["def random_recommendation_5000_weighted(data, n=5):\n","    \"\"\"Случайные рекоммендации\"\"\"\n","    popularity = data_train.groupby('item_id')['quantity'].sum().reset_index()\n","    popularity.rename(columns={'quantity': 'n_sold'}, inplace=True)\n","    top_5000 = popularity.sort_values('n_sold', ascending=False).head(5000)\n","    top_5000['weighted'] = top_5000['n_sold']/top_5000['n_sold'].sum()\n","    items = np.array(top_5000['item_id'])\n","    recs = np.random.choice(items, p = np.array(top_5000['weighted']), size=n, replace=False)\n","    \n","    return recs.tolist()"],"execution_count":112,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"WBP9LSODVG7-","executionInfo":{"status":"ok","timestamp":1626355361821,"user_tz":-180,"elapsed":266,"user":{"displayName":"Olga Fedorova","photoUrl":"","userId":"03055957930476901401"}},"outputId":"dcfa890e-81d6-4c0d-e27d-67abe01591bc"},"source":["top_5000.head()"],"execution_count":113,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>item_id</th>\n","      <th>n_sold</th>\n","      <th>weighted</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>55470</th>\n","      <td>6534178</td>\n","      <td>190227964</td>\n","      <td>0.833289</td>\n","    </tr>\n","    <tr>\n","      <th>55430</th>\n","      <td>6533889</td>\n","      <td>15978434</td>\n","      <td>0.069993</td>\n","    </tr>\n","    <tr>\n","      <th>55465</th>\n","      <td>6534166</td>\n","      <td>12439291</td>\n","      <td>0.054490</td>\n","    </tr>\n","    <tr>\n","      <th>55576</th>\n","      <td>6544236</td>\n","      <td>2501949</td>\n","      <td>0.010960</td>\n","    </tr>\n","    <tr>\n","      <th>43620</th>\n","      <td>1404121</td>\n","      <td>1562004</td>\n","      <td>0.006842</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["       item_id     n_sold  weighted\n","55470  6534178  190227964  0.833289\n","55430  6533889   15978434  0.069993\n","55465  6534166   12439291  0.054490\n","55576  6544236    2501949  0.010960\n","43620  1404121    1562004  0.006842"]},"metadata":{"tags":[]},"execution_count":113}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iKt1slAJUTki","executionInfo":{"status":"ok","timestamp":1626355436884,"user_tz":-180,"elapsed":323,"user":{"displayName":"Olga Fedorova","photoUrl":"","userId":"03055957930476901401"}},"outputId":"2e3a503d-3b9b-4c68-c393-7417ed7dc30c"},"source":["%%time\n","\n","rand_recomm_5000 = random_recommendation_5000_weighted(data_train, n=5)\n","rand_recomm_5000"],"execution_count":117,"outputs":[{"output_type":"stream","text":["CPU times: user 140 ms, sys: 504 µs, total: 141 ms\n","Wall time: 146 ms\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"e2ZdZK70XfL6","executionInfo":{"status":"ok","timestamp":1626355926620,"user_tz":-180,"elapsed":234,"user":{"displayName":"Olga Fedorova","photoUrl":"","userId":"03055957930476901401"}}},"source":["result['random_recommendation_5000_weighted'] = result['user_id'].apply(lambda x: rand_recomm_5000)"],"execution_count":124,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bOXE64a6X8_0","executionInfo":{"status":"ok","timestamp":1626356049870,"user_tz":-180,"elapsed":1415,"user":{"displayName":"Olga Fedorova","photoUrl":"","userId":"03055957930476901401"}},"outputId":"45bc0a1f-6535-40f2-acb2-cb5fc6efc62b"},"source":["for column_name in result.columns[1:]:\n","    print('%s: %f' % (column_name, result.apply(lambda row: precision_at_k(row[column_name], row['actual']), axis=1).mean()))"],"execution_count":126,"outputs":[{"output_type":"stream","text":["actual: 1.000000\n","random_recommendation: 0.000588\n","popular_recommendation: 0.155240\n","itemitem: 0.033595\n","cosine: 0.035260\n","tfidf: 0.036141\n","own_purchases: 0.179987\n","weighted random recommender: 0.055142\n","random_recommendation_5000_weighted: 0.048090\n"],"name":"stdout"}]}]}